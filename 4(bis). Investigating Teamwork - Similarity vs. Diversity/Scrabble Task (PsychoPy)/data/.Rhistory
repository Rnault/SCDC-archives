print('fff')
next
} else{
if (l > 1){
if ((comparisons$Participant2[l] %in% pairs$Participant2)|(comparisons$Participant2[l] %in% pairs$Participant1)){
print('rrr')
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l]
pairs$Participant2[count] = comparisons$Participant2[l]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count +1}}
else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
print('rrr')
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count +1}}}}}
comparisons = arrange(comparisons,Performance_sim,Same_words)
# pairs = data.frame(Participant1 = rep(NA,(length/2)),Participant2 = rep(NA,(length/2)),Condition = rep(NA,(length/2)),Group_number = rep(NA,(length/2)), stringsAsFactors=TRUE)
pairs = data.frame(Participant1 = rep(NA,length),Participant2 = rep(NA,length),Condition = rep(NA,length),Group_number = rep(NA,length), stringsAsFactors=TRUE)
count=1
for (l in 1:nrow(comparisons)){
if (l %% 2 == 0){
comparisons = arrange(comparisons,-row_number())
if ((comparisons$Participant1[l-1] %in% pairs$Participant1)|(comparisons$Participant1[l-1] %in% pairs$Participant2)){
next
} else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 0
pairs$Group_number[count] = count
count = count +1}}}
else{
comparisons = arrange(comparisons,-row_number())
if ((comparisons$Participant1[l] %in% pairs$Participant1)|(comparisons$Participant1[l] %in% pairs$Participant2)){
print('fff')
next
} else{
if (l < 2){
if ((comparisons$Participant2[l] %in% pairs$Participant2)|(comparisons$Participant2[l] %in% pairs$Participant1)){
print('rrr')
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l]
pairs$Participant2[count] = comparisons$Participant2[l]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count +1}}
else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
print('rrr')
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count +1}}}}}
View(pairs)
comparisons = arrange(comparisons,Performance_sim,Same_words)
# pairs = data.frame(Participant1 = rep(NA,(length/2)),Participant2 = rep(NA,(length/2)),Condition = rep(NA,(length/2)),Group_number = rep(NA,(length/2)), stringsAsFactors=TRUE)
pairs = data.frame(Participant1 = rep(NA,length),Participant2 = rep(NA,length),Condition = rep(NA,length),Group_number = rep(NA,length), stringsAsFactors=TRUE)
count=1
for (l in 1:nrow(comparisons)){
if (l %% 2 == 0){
comparisons = arrange(comparisons,-row_number())
if ((comparisons$Participant1[l-1] %in% pairs$Participant1)|(comparisons$Participant1[l-1] %in% pairs$Participant2)){
next
} else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 0
pairs$Group_number[count] = count
count = count +1}}}
else{
comparisons = arrange(comparisons,-row_number())
if (l < 2){
if ((comparisons$Participant1[l] %in% pairs$Participant1)|(comparisons$Participant1[l] %in% pairs$Participant2)){
print('fff')
next
} else{
if ((comparisons$Participant2[l] %in% pairs$Participant2)|(comparisons$Participant2[l] %in% pairs$Participant1)){
print('rrr')
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l]
pairs$Participant2[count] = comparisons$Participant2[l]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count +1}}
else{
comparisons = arrange(comparisons,Performance_sim,Same_words)
# pairs = data.frame(Participant1 = rep(NA,(length/2)),Participant2 = rep(NA,(length/2)),Condition = rep(NA,(length/2)),Group_number = rep(NA,(length/2)), stringsAsFactors=TRUE)
pairs = data.frame(Participant1 = rep(NA,length),Participant2 = rep(NA,length),Condition = rep(NA,length),Group_number = rep(NA,length), stringsAsFactors=TRUE)
count=1
for (l in 1:nrow(comparisons)){
if (l %% 2 == 0){
comparisons = arrange(comparisons,-row_number())
if ((comparisons$Participant1[l-1] %in% pairs$Participant1)|(comparisons$Participant1[l-1] %in% pairs$Participant2)){
next
} else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 0
pairs$Group_number[count] = count
count = count +1}}}
else{
comparisons = arrange(comparisons,-row_number())
if (l < 2){
if ((comparisons$Participant1[l] %in% pairs$Participant1)|(comparisons$Participant1[l] %in% pairs$Participant2)){
print('fff')
next
} else{
if ((comparisons$Participant2[l] %in% pairs$Participant2)|(comparisons$Participant2[l] %in% pairs$Participant1)){
print('rrr')
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l]
pairs$Participant2[count] = comparisons$Participant2[l]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count +1}}}
else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
print('rrr')
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count +1}}}}
View(pairs)
comparisons = arrange(comparisons,Performance_sim,Same_words)
# pairs = data.frame(Participant1 = rep(NA,(length/2)),Participant2 = rep(NA,(length/2)),Condition = rep(NA,(length/2)),Group_number = rep(NA,(length/2)), stringsAsFactors=TRUE)
pairs = data.frame(Participant1 = rep(NA,length),Participant2 = rep(NA,length),Condition = rep(NA,length),Group_number = rep(NA,length), stringsAsFactors=TRUE)
count=1
for (l in 1:nrow(comparisons)){
if (l%%2==0){
comparisons = arrange(comparisons,-row_number())
if ((comparisons$Participant1[l-1] %in% pairs$Participant1)|(comparisons$Participant1[l-1] %in% pairs$Participant2)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant1)|(comparisons$Participant2[l-1] %in% pairs$Participant2)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 0
pairs$Group_number[count] = count
count = count+1
}
}
}else{
comparisons = arrange(comparisons,-row_number())
if (l>2){
if((comparisons$Participant1[l-1] %in% pairs$Participant2)|(comparisons$Participant1[l-1] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l]
pairs$Participant2[count] = comparisons$Participant2[l]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}}else{
if((comparisons$Participant1[l-1] %in% pairs$Participant2)|(comparisons$Participant1[l-1] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}
}
}}
comparisons = arrange(comparisons,Performance_sim,Same_words)
# pairs = data.frame(Participant1 = rep(NA,(length/2)),Participant2 = rep(NA,(length/2)),Condition = rep(NA,(length/2)),Group_number = rep(NA,(length/2)), stringsAsFactors=TRUE)
pairs = data.frame(Participant1 = rep(NA,length),Participant2 = rep(NA,length),Condition = rep(NA,length),Group_number = rep(NA,length), stringsAsFactors=TRUE)
count=1
for (l in 1:nrow(comparisons)){
if (l%%2==0){
comparisons = arrange(comparisons,-row_number())
if ((comparisons$Participant1[l-1] %in% pairs$Participant1)|(comparisons$Participant1[l-1] %in% pairs$Participant2)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant1)|(comparisons$Participant2[l-1] %in% pairs$Participant2)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 0
pairs$Group_number[count] = count
count = count+1
}
}
}else{
comparisons = arrange(comparisons,-row_number())
if (l<2){
if((comparisons$Participant1[l-1] %in% pairs$Participant2)|(comparisons$Participant1[l-1] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l]
pairs$Participant2[count] = comparisons$Participant2[l]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}}else{
if((comparisons$Participant1[l-1] %in% pairs$Participant2)|(comparisons$Participant1[l-1] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}
}
}}
View(pairs)
for (l in 1:nrow(comparisons)){
if (l%%2==0){
comparisons = arrange(comparisons,-row_number())
if ((comparisons$Participant1[l-1] %in% pairs$Participant1)|(comparisons$Participant1[l-1] %in% pairs$Participant2)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant1)|(comparisons$Participant2[l-1] %in% pairs$Participant2)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 0
pairs$Group_number[count] = count
count = count+1
}
}
}else{
comparisons = arrange(comparisons,-row_number())
if (l<2){
if((comparisons$Participant1[l] %in% pairs$Participant2)|(comparisons$Participant1[l] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l] %in% pairs$Participant2)|(comparisons$Participant2[l] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l]
pairs$Participant2[count] = comparisons$Participant2[l]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}}else{
if((comparisons$Participant1[l-1] %in% pairs$Participant2)|(comparisons$Participant1[l-1] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}
}
}}
View(pairs)
for (l in 1:nrow(comparisons)){
if (l%%2==0){
comparisons = arrange(comparisons,-row_number())
if ((comparisons$Participant1[l-1] %in% pairs$Participant1)|(comparisons$Participant1[l-1] %in% pairs$Participant2)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant1)|(comparisons$Participant2[l-1] %in% pairs$Participant2)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 0
pairs$Group_number[count] = count
count = count+1
}
}
}else{
comparisons = arrange(comparisons,-row_number())
if (l<2){
if((comparisons$Participant1[l] %in% pairs$Participant2)|(comparisons$Participant1[l] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l] %in% pairs$Participant2)|(comparisons$Participant2[l] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l]
pairs$Participant2[count] = comparisons$Participant2[l]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}}else{
if((comparisons$Participant1[l-1] %in% pairs$Participant2)|(comparisons$Participant1[l-1] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}
}
}}
comparisons = arrange(comparisons,Performance_sim,Same_words)
# pairs = data.frame(Participant1 = rep(NA,(length/2)),Participant2 = rep(NA,(length/2)),Condition = rep(NA,(length/2)),Group_number = rep(NA,(length/2)), stringsAsFactors=TRUE)
pairs = data.frame(Participant1 = rep(NA,length),Participant2 = rep(NA,length),Condition = rep(NA,length),Group_number = rep(NA,length), stringsAsFactors=TRUE)
count=1
for (l in 1:nrow(comparisons)){
for (l in 1:nrow(comparisons)){
if (l%%2==0){
comparisons = arrange(comparisons,-row_number())
if ((comparisons$Participant1[l-1] %in% pairs$Participant1)|(comparisons$Participant1[l-1] %in% pairs$Participant2)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant1)|(comparisons$Participant2[l-1] %in% pairs$Participant2)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 0
pairs$Group_number[count] = count
count = count+1
}
}
}else{
comparisons = arrange(comparisons,-row_number())
if (l<2){
if((comparisons$Participant1[l] %in% pairs$Participant2)|(comparisons$Participant1[l] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l] %in% pairs$Participant2)|(comparisons$Participant2[l] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l]
pairs$Participant2[count] = comparisons$Participant2[l]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}}else{
if((comparisons$Participant1[l-1] %in% pairs$Participant2)|(comparisons$Participant1[l-1] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}
}
}}
View(pairs)
View(pairs)
View(pairs)
{}
View(pairs)
View(pairs)
comparisons = arrange(comparisons,Performance_sim,Same_words)
# pairs = data.frame(Participant1 = rep(NA,(length/2)),Participant2 = rep(NA,(length/2)),Condition = rep(NA,(length/2)),Group_number = rep(NA,(length/2)), stringsAsFactors=TRUE)
pairs = data.frame(Participant1 = rep(NA,length),Participant2 = rep(NA,length),Condition = rep(NA,length),Group_number = rep(NA,length), stringsAsFactors=TRUE)
count=1
for (l in 1:nrow(comparisons)){
if (l%%2==0){
comparisons = arrange(comparisons,-row_number())
if ((comparisons$Participant1[l-1] %in% pairs$Participant1)|(comparisons$Participant1[l-1] %in% pairs$Participant2)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant1)|(comparisons$Participant2[l-1] %in% pairs$Participant2)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 0
pairs$Group_number[count] = count
count = count+1
}
}
}else{
comparisons = arrange(comparisons,-row_number())
if (l<2){
if((comparisons$Participant1[l] %in% pairs$Participant2)|(comparisons$Participant1[l] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l] %in% pairs$Participant2)|(comparisons$Participant2[l] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l]
pairs$Participant2[count] = comparisons$Participant2[l]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}}else{
if((comparisons$Participant1[l-1] %in% pairs$Participant2)|(comparisons$Participant1[l-1] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}
}
}}
View(pairs)
View(pairs)
view(pairs)
View(pairs)
for (l in 1:nrow(comparisons)){
if (l%%2==0){
comparisons = arrange(comparisons,-row_number())
if ((comparisons$Participant1[l-1] %in% pairs$Participant1)|(comparisons$Participant1[l-1] %in% pairs$Participant2)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant1)|(comparisons$Participant2[l-1] %in% pairs$Participant2)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 0
pairs$Group_number[count] = count
count = count+1
}
}
}else{
comparisons = arrange(comparisons,-row_number())
if (l<2){
if((comparisons$Participant1[l] %in% pairs$Participant2)|(comparisons$Participant1[l] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l] %in% pairs$Participant2)|(comparisons$Participant2[l] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l]
pairs$Participant2[count] = comparisons$Participant2[l]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}}else{
if((comparisons$Participant1[l-1] %in% pairs$Participant2)|(comparisons$Participant1[l-1] %in% pairs$Participant1)){
next
}else{
if ((comparisons$Participant2[l-1] %in% pairs$Participant2)|(comparisons$Participant2[l-1] %in% pairs$Participant1)){
next
}else{
pairs$Participant1[count] = comparisons$Participant1[l-1]
pairs$Participant2[count] = comparisons$Participant2[l-1]
pairs$Condition[count] = 1
pairs$Group_number[count] = count
count = count+1
}
}
}
}}
View(pairs)
comparisons = arrange(comparisons,Performance_sim,Same_words)
# pairs = data.frame(Participant1 = rep(NA,(length/2)),Participant2 = rep(NA,(length/2)),Condition = rep(NA,(length/2)),Group_number = rep(NA,(length/2)), stringsAsFactors=TRUE)
pairs = data.frame(Participant1 = rep(NA,length),Participant2 = rep(NA,length),Condition = rep(NA,length),Group_number = rep(NA,length), stringsAsFactors=TRUE)
count=1
View(pairs)
